---
title: "Association of Ki67 index and prognosis markers for melanoma from toes of dogs"
author: 
  - name: Sichao Wang
    email: wangsic1@msu.edu
    affiliations: 
      - name: Michigan State University, Center for Statistical Training and Consulting
date: "`r format(Sys.time(), '%Y-%m-%d, %H:%M:%S %Z')`"
format: 
  html: 
    toc: true 
    toc-depth: 4
    toc-location: left 
    number-sections: true
    number-depth: 4
    code-fold: false 
    code-tools: false 
    embed-resources: true 
    theme: default 
execute: 
  eval: true 
  echo: false #fenced
  output: true 
  message: false 
  warning: false 
  error: false 
  include: true 
---

# Project Overview:

-   Title: Correlation of histologic features and location with Ki67 index in canine toes melanocytic tumors

Project PI's:

-   Rebecca,Smedley (Faculty)

CSTAT Personnel:

-   Sichao Wang, Ph.D.,

## Original Description

This analysis is for for melanoma from toes of dogs, which is similar to the eyelid tumor one.

## Primary Objective:

**Exame the association of a few prognosis marker with Gold standard Ki67 index for melanoma from toes of dogs**

**References**

## Project Updates:

```{r}
#| label: load-packages
#| include: false

pacman::p_load(## file folder setup
               fs,   # creat folder dir_create()
               here, # easy to do cross reference in the project.
               ## Data step
               readr,
               readxl, # read_excel()
               tidyverse,
               janitor,
               ## IDA
               Hmisc,
               ## Model
               meta,
               metafor,
               # dmetar, #for find.outliers()
               lme4,
               glmmTMB,
               broom,
               emmeans,
               rpart, # for dx2y()
               psych, #
               confintr, #for cramersv(), also good bootstrap CI tools.
               
               # diagostic tests
               DTComPair, # for sensitivity, specificity, PPV and NPV for diagnostics tests.
               ROCit, #for ROC and graph
               ## result reporting
               ### graph
               ggplot2,
               ### table
               gt,
               gtsummary,
               knitr,        # for kable()
               sjPlot      # tab_model()
               )


set.seed(42004063)

```

```{r}
#| label: setup-folder
#| include: false

# create the default folder/subfolder

dir_create(here("Data"))  # store raw data, clean data. 
dir_create(here("Data/Source"))  
dir_create(here("Data/Clean")) 

dir_create(here("Documents"))  # all the docs
dir_create(here("Code"))       # r code
dir_create(here("E-mails"))    # correspondence

# Declare location of this script relative to the project root directory.
here::i_am(path = "Code/C1296_Smedley_Ki67.qmd")  #save the qmd under code first and run this line.

# dir_ls()    # briefly check
# dir_tree()  # Show the tree, not necessary, takes time.
# dir_tree("Data")

```

```{r}
#| label: import-data
#| include: false


df_0 <- read_excel(here("Data/Source/digit for stats Feb 25 2024.xlsx"), 
    col_types = c("text", "text", "text", 
        "text", "text", "text", "text", "text", 
        "text", "text", "text", "text", "numeric", 
        "numeric"), na = "NA") |> 
  clean_names() |> 
  set_names("case_number","Ki67","location_self","location_report","sex","intact","nuclear_atypia","mitotoc","pigment","ulceration","beyond_dermis","size","tumor_thickness","mitotic_count") |> 
  mutate(across(!case_number&!tumor_thickness&!mitotic_count,~as.factor(tolower(.))))

```

# Statistical analysis

## Initial Data Analysis (IDA)

```{r}
#|label: IDA-describe


#gotta use namespace Hmisc otherwise out of script

d_Melanoma <- Hmisc::describe(df_0)



Hmisc::html(d_Melanoma, size=90, scroll=TRUE)


```

Via IDA, we brielfy examine the condition or nature of the variable we are dealing with. Such as missing data situation, levels and frequency of categorical variable, mean and sd and distribution of continous variables. So far, we have not detect any notable issues with the dataset. We will precced with some descrtiptive statistics below.

Similar to eyelid data, the thickness and micotic count are all distributed skewly. However, we do not build model there is no concerns.

We notice that there 1 dog has unspecified sex. 4 dogs have unspecified values for intact column. 2 dogs have unknown values for beyond_dermis column. 2 dogs have unknown values for size column. Since the unspecified and unkonw values are not substantial proportion of data, we will delete those values and treated as missing values for the analysis.

## Descriptive Statistics

```{r}
#| label: tbl-descriptive-stats
#| tbl-cap: Descriptive-stats by Ki67 status


df_1 <- df_0 |> 
  mutate(
   across(c(sex,intact,beyond_dermis,size),~ifelse(.=="unspecified"|.=="unknow",NA,.))
  ) |> 
  mutate(beyond_dermis=as.factor(ifelse(beyond_dermis=="1","1","0")))

df_1 %>% 
  select(-case_number) %>% 
   tbl_summary(
    by = "Ki67",
    type = all_continuous() ~ "continuous2",
    statistic = list(
      all_continuous() ~ c("{mean} ({sd})",
                           "{median} ({p25}, {p75})"),
      all_categorical() ~ "{n} / {N} ({p}%)"
    ),
    digits = all_continuous() ~ 2,
    missing_text = "(Missing)"
  ) %>% 
  add_p(pvalue_fun = ~ style_pvalue(.x, digits = 2)) %>% 
   add_n() %>%
   modify_header(label ~ "**Prognositic marker**") %>% 
  modify_spanning_header(c("stat_1", "stat_2") ~ "**Gold standard Ki67 status**") 

```

See @tbl-descriptive-stats, it gives a summarization of all the prognostic makers be Ki67, which can be modified to make Table 1 in the manuscript. It is noteworth that Chisquared test indicates that nuclear_atypia (p-value:<0.001), mitotoc (p-value:0.006), ulceration (p-value:0.003) associated with Ki67 status. Wilcoxon rank sum test shows that mitotic_count(as original count) are significant different between two Ki67 status. Chisquare test tells us whether this is association between two categorical variables. However, it does not tell what is the direction of the association.In order to tell which level of each prognostic marker more likely to have Ki67=1, we need to do effect size estimation. Here we will calculate Odd Ratios.

## Inferencial statistics.

### odds ratios(CI) for significant prognostic markers

You will notice that the p-value from univariate logistic regression is the same as the $\chi 2$ test, which is meant to be. What we want from univariate logistic regression is the Odd ratio and 95% confidence interval. They are more informative than just p-value.

#### nuclear_atypia and Ki67

```{r}
#| label: infer-nuclear_atypia

# Will use univariate logit to get odd ratio and ci

logit_nuclear_atypia <- glm(Ki67 ~ nuclear_atypia, data = df_1 %>% mutate(Ki67=factor(Ki67,levels=c(0,1))), family = "binomial")


logit_nuclear_atypia %>% tab_model()


```

Having nuclear atypia=1 is more likely to have Ki67=1. The odd ratio is 25.13 with 95% CI: [5.86 â€“ 144.80]. We notice that the 95% confidence interval is so wide which indicate there is high uncertainty of the estimation. There is because the sample size is low and make the cells count in the 2*2 contingency table is low. Eg, only 3 fall in the cell of Ki67=0 and Atypia =0.

### mitotoc and Ki67

```{r}
#| label: infer-micotic

# Will use univariate logit to get odd ratio and ci

logit_mitotoc <- glm(Ki67 ~ mitotoc, data = df_1 %>% mutate(Ki67=factor(Ki67,levels=c(0,1))), family = "binomial")

logit_mitotoc %>% tab_model()


```

Having mitotoc=1 is more likely to have Ki67=1. The odd ratio is 8.00 95% CI [1.87,  56.05]. The confidence interval is also very wide.

### ulceration and Ki67

```{r}
#| label: infer-ulceration

# Will use univariate logit to get odd ratio and ci

logit_ulceration <- glm(Ki67 ~ ulceration, data = df_1 %>% mutate(Ki67=factor(Ki67,levels=c(0,1))), family = "binomial")

logit_ulceration %>% tab_model()


```

Having mitotoc=1 is more likely to have Ki67=1.The odd ratio is 6.64 95% CI: [1.93, 26.16]. The confidence interval is also pretty wide.

### odds ratios(CI) for insignificant prognostic markers

In case, odd ratios(CIs) are still needed for insignificant markers.

### Sex and Ki67

```{r}
#| label: infer-sex

# Will use univariate logit to get odd ratio and ci, be careful has to set reference level for Ki67 to 0 

logit_sex <- glm(Ki67 ~ sex, data = df_1 %>% mutate(Ki67=factor(Ki67,levels=c(0,1))), family = "binomial")

logit_sex %>% tab_model()

```

Sex is not statistically significant associated with Ki67 status.

### location self and Ki67

```{r}
#| label: infer-loc-self

# Will use univariate logit to get odd ratio and ci, be careful has to set reference level for Ki67 to 0 

logit_location_self <- glm(Ki67 ~ location_self, data = df_1 %>% mutate(Ki67=factor(Ki67,levels=c(0,1))) %>% filter(location_self!=3), family = "binomial")


logit_location_self %>% tab_model()

```

The location_self and Ki67 contingency table has very low count for location_self=1.

### location report and Ki67

```{r}
#| label: infer-loc-report

# Will use univariate logit to get odd ratio and ci, be careful has to set reference level for Ki67 to 0 

logit_location_report <- glm(Ki67 ~ location_report, data = df_1 %>% mutate(Ki67=factor(Ki67,levels=c(0,1))), family = "binomial")

logit_location_report %>% tab_model()

```

We notice that the result table looks weird(a lot of them are NA). Becasue there are so much 0 counts in the cells of contingency table of location report and Ki67. It does not make sense to report the odd ratios with the current categories of location_report unless we combine some of the categories to make the cell count not 0 any more.


### Tumor depth and Ki 67

```{r}
#| label: infer-tumor-report

# Will use univariate logit to get odd ratio and ci, be careful has to set reference level for Ki67 to 0 

logit_tumor_thick <- glm(Ki67 ~ tumor_thickness, data = df_1 %>% mutate(Ki67=factor(Ki67,levels=c(0,1)),tumor_mm=100*tumor_thickness), family = "binomial")

logit_tumor_mm <- glm(Ki67 ~ tumor_mm, data = df_1 %>% mutate(Ki67=factor(Ki67,levels=c(0,1)),tumor_mm=100*tumor_thickness), family = "binomial")


logit_beyond_dermis <- glm(Ki67 ~ beyond_dermis, data = df_1 %>% mutate(Ki67=factor(Ki67,levels=c(0,1)),tumor_mm=100*tumor_thickness), family = "binomial")

# logit_tumor_thick %>% tab_model()


# logit_tumor_mm %>% tab_model()

# logit_beyond_dermis %>% tab_model()



```

## Additional association/correlation analysis

If you really want correlation coefficient type of index, there are some below. Although, those index are really used in medical field.

### Tetrachoric correlation

Tetrachoric correlation is for two binary variables.It ranges from -1 to 1 and interpreted just as pearson correlation. Because sex is not shown as 0,1 in the dataset, I define 2 as 1.

```{r}
#| label: cor-tetra
#| warning: false
#| output-location: column-fragment
tetrachoric<-tetrachoric(df_1 %>% select(-case_number,-location_self,-location_report,-tumor_thickness,-mitotic_count,-intact,-size) %>% mutate(sex=ifelse(sex=="1",1,0)) %>%  mutate_all(as.character) %>% mutate_all(as.numeric))



tetrachoric$rho %>% round(2) %>% data.frame() %>% 
  rownames_to_column(" ") %>% 
  gt()
  
```

### Polychoric correlation

Polychoric correlation is extension of Tetrachoric correlation, which is variables more than 2 levels. Because female and intact are not shown as 0,1 in the dataset, I define female as 1.

```{r}
#| label: cor-polychor
#| warning: false
polychoric<-polychoric(df_1 %>% select(Ki67,location_self,location_report,size) %>% mutate_all(as.character) %>% mutate_all(as.numeric))

polychoric$rho %>% round(2) %>% data.frame() %>% 
  rownames_to_column(" ") %>% 
  gt()
```

There is only 1 value of 2 in intact column so can not do the Polychoric correlation.

### Biserial correlation

Biserial correlation betweem one binary variable and one continuous variable. This one has assumption that the continuous variable is assumed to have resulted from a dichotomized normal variable.

```{r}
#| label: cor-biserial
#| eval: false
biserial(df_1$tumor_thickness,df_1$Ki67)

biserial(df_1$mitotic_count,df_1$Ki67)

```

|      | Tumor thickness                                                          | Mitotic count                                                          |
|----------------|------------------------------|--------------------------|
| Ki67 | `r biserial(df_1$tumor_thickness,df_1$Ki67)` | `r biserial(df_1$mitotic_count,df_1$Ki67)` |

: Biserial between Ki67


### Cramer's V

Cramer's V is a measure of the degree of association between two variables that have two or more unordered response categories. It can range from 0â€”1, with 0 indicating no association and 1 indicating a perfect association. Does not tell you the direction of the association. It is a scaled version of the chi-squared test statistic.

```{r}
#| label: tbl-cramerV
#| tbl-cap: Cramer's V for categorical variables

cramer<-c(cramersv(df_1 %>% select(Ki67,location_self) %>% drop_na() %>% mutate_all(as.numeric) %>% as.data.frame()),
cramersv(df_1 %>% select(Ki67,location_report)%>% drop_na() %>% mutate_all(as.numeric) %>% as.data.frame()),

cramersv(df_1 %>% select(Ki67,sex)%>% drop_na() %>% mutate_all(as.numeric) %>% as.data.frame()),

cramersv(df_1 %>% select(Ki67,intact)%>% drop_na() %>% mutate_all(as.numeric) %>% as.data.frame()),

cramersv(df_1 %>% select(Ki67,nuclear_atypia)%>% drop_na() %>% mutate_all(as.numeric) %>% as.data.frame()),

cramersv(df_1 %>% select(Ki67,mitotoc)%>% drop_na() %>% mutate_all(as.numeric) %>% as.data.frame()),


cramersv(df_1 %>% select(Ki67,pigment)%>% drop_na() %>% mutate_all(as.numeric) %>% as.data.frame()),

cramersv(df_1 %>% select(Ki67,ulceration)%>% drop_na() %>% mutate_all(as.numeric) %>% as.data.frame()),

cramersv(df_1 %>% select(Ki67,beyond_dermis)%>% drop_na() %>% mutate_all(as.numeric) %>% as.data.frame()),

cramersv(df_1 %>% select(Ki67,size)%>% drop_na() %>% mutate_all(as.numeric) %>% as.data.frame()))



# data.frame(marker=names(Dat_Melanoma_clean)[3:12],cramerV=cramer %>% round(3))

ci_cramer_location_self<-ci_cramersv(
  df_1 %>% select(Ki67,location_self)%>% drop_na() %>% mutate_all(as.numeric) %>% as.data.frame() ,
  probs = c(0.025, 0.975),
  type = c( "bootstrap"),
  boot_type = c("bca"),
  R = 500L,
)



ci_cramer_location_report<-ci_cramersv(
  df_1 %>% select(Ki67,location_report)%>% drop_na() %>% mutate_all(as.numeric) %>% as.data.frame() ,
  probs = c(0.025, 0.975),
  type = c( "bootstrap"),
  boot_type = c("bca"),
  R = 500L,
)


ci_cramer_sex<-ci_cramersv(
  df_1 %>% select(Ki67,sex)%>% drop_na() %>% mutate_all(as.numeric) %>% as.data.frame() ,
  probs = c(0.025, 0.975),
  type = c( "bootstrap"),
  boot_type = c("bca"),
  R = 500L,
)



ci_cramer_intact<-ci_cramersv(
  df_1 %>% select(Ki67,intact)%>% drop_na() %>% mutate_all(as.numeric) %>% as.data.frame() ,
  probs = c(0.025, 0.975),
  type = c( "bootstrap"),
  boot_type = c("bca"),
  R = 500L,
)

ci_cramer_nuclear_atypia<-ci_cramersv(
  df_1 %>% select(Ki67,nuclear_atypia)%>% drop_na() %>% mutate_all(as.numeric) %>% as.data.frame() ,
  probs = c(0.025, 0.975),
  type = c( "bootstrap"),
  boot_type = c("bca"),
  R = 500L,
)


ci_cramer_mitotoc<-ci_cramersv(
  df_1 %>% select(Ki67,mitotoc)%>% drop_na() %>% mutate_all(as.numeric) %>% as.data.frame() ,
  probs = c(0.025, 0.975),
  type = c( "bootstrap"),
  boot_type = c("bca"),
  R = 500L,
)


ci_cramer_pigment<-ci_cramersv(
  df_1 %>% select(Ki67,pigment)%>% drop_na() %>% mutate_all(as.numeric) %>% as.data.frame() ,
  probs = c(0.025, 0.975),
  type = c( "bootstrap"),
  boot_type = c("bca"),
  R = 500L,
)

ci_cramer_ulceration<-ci_cramersv(
  df_1 %>% select(Ki67,ulceration)%>% drop_na() %>% mutate_all(as.numeric) %>% as.data.frame() ,
  probs = c(0.025, 0.975),
  type = c( "bootstrap"),
  boot_type = c("bca"),
  R = 500L,
)

ci_cramer_beyond_dermis<-ci_cramersv(
  df_1 %>% select(Ki67,beyond_dermis)%>% drop_na() %>% mutate_all(as.numeric) %>% as.data.frame() ,
  probs = c(0.025, 0.975),
  type = c( "bootstrap"),
  boot_type = c("bca"),
  R = 500L,
)

ci_cramer_size<-ci_cramersv(
  df_1 %>% select(Ki67,size)%>% drop_na() %>% mutate_all(as.numeric) %>% as.data.frame() ,
  probs = c(0.025, 0.975),
  type = c( "bootstrap"),
  boot_type = c("bca"),
  R = 500L,
)


cramerV<-c(ci_cramer_location_self$estimate,ci_cramer_location_report$estimate,ci_cramer_sex$estimate,ci_cramer_intact$estimate,ci_cramer_nuclear_atypia$estimate,ci_cramer_mitotoc$estimate,ci_cramer_pigment$estimate,ci_cramer_ulceration$estimate,ci_cramer_beyond_dermis$estimate,ci_cramer_size$estimate)

cramerVlower<-c(ci_cramer_location_self$interval %>% pluck(1),ci_cramer_location_report$interval %>% pluck(1),ci_cramer_sex$interval %>% pluck(1),ci_cramer_intact$interval %>% pluck(1),ci_cramer_nuclear_atypia$interval %>% pluck(1),ci_cramer_mitotoc$interval %>% pluck(1),ci_cramer_pigment$interval %>% pluck(1),ci_cramer_ulceration$interval %>% pluck(1),ci_cramer_beyond_dermis$interval %>% pluck(1),ci_cramer_size$interval %>% pluck(1))

cramerVupper<-c(ci_cramer_location_self$interval %>% pluck(2),ci_cramer_location_report$interval %>% pluck(2),ci_cramer_sex$interval %>% pluck(2),ci_cramer_intact$interval %>% pluck(2),ci_cramer_nuclear_atypia$interval %>% pluck(2),ci_cramer_mitotoc$interval %>% pluck(2),ci_cramer_pigment$interval %>% pluck(2),ci_cramer_ulceration$interval %>% pluck(2),ci_cramer_beyond_dermis$interval %>% pluck(2),ci_cramer_size$interval %>% pluck(2))


data.frame(marker=names(df_1)[3:12],cramerV=cramerV %>% round(3),lower=cramerVlower%>% round(3),upper=cramerVupper%>% round(3)) %>% 
  gt() %>% 
   tab_spanner(
    label = "95% bootstrap confidence interval(Rep=500)",
    columns = c(lower,upper)
  )
```


@tbl-cramerV shows Cramer's V, we see mitotoc has strongest association. 




```{r}
#| label: cor-x2y

#Based on Information Theory, a new metric - the x2y metric - was devised to quantify the strength of the association between pairs of variables.


# https://rviews.rstudio.com/2021/04/15/an-alternative-to-the-correlation-coefficient-that-works-for-numeric-and-categorical-variables/

```


# Diagnostics test accuracy

We will estimate sensitivity, specificity, Positive predictive value(PPV) and negative predictive value for each prognostics marker. From the convenience of the software, are for the positive likelihood ratio (PLR) and negative likelihood ratios(NLR) are also given.

Some notes:

Sensitivity and specificity are property of diagnostics tests, which are considered to be *independent on* prevalence(target population). 

PPV and NPV are also property of diagnostic tests, which are *dependent on* prevalence(target population). In a clinical setting, PPV and NPV are more useful. There is a formula to convert sensitivity and specificity with prevalence to PPV and NPV. 

Positive likelihood ratio (PLR) and negative likelihood ratios(NLR) combine sensitivity and specificity into one index. 



## nuclear_atypia and Ki67

```{r}
#| label: nuclear_atypia_accuracy


# this blog recommends # install.packages("DTComPair")
#https://library.virginia.edu/data/articles/comparing-the-accuracy-of-two-binary-diagnostic-tests-in-a-paired-study-design

df_1_cells<-df_1 %>% mutate(nuclear_atypia_cell=case_when(
  Ki67==1 & nuclear_atypia==1 ~ "TP",
  Ki67==0 & nuclear_atypia==1 ~ "FP",
  Ki67==1 & nuclear_atypia==0 ~ "FN",
  Ki67==0 & nuclear_atypia==0 ~ "TN",
  
), mitotoc_cell=case_when(
  Ki67==1 & mitotoc==1 ~ "TP",
  Ki67==0 & mitotoc==1 ~ "FP",
  Ki67==1 & mitotoc==0 ~ "FN",
  Ki67==0 & mitotoc==0 ~ "TN",
  
),pigment_cell=case_when(
  Ki67==1 & pigment==1 ~ "TP",
  Ki67==0 & pigment==1 ~ "FP",
  Ki67==1 & pigment==0 ~ "FN",
  Ki67==0 & pigment==0 ~ "TN",
  
),ulceration_cell=case_when(
  Ki67==1 & ulceration==1 ~ "TP",
  Ki67==0 & ulceration==1 ~ "FP",
  Ki67==1 & ulceration==0 ~ "FN",
  Ki67==0 & ulceration==0 ~ "TN",
  
) ,beyond_dermis_cell=case_when(
  Ki67==1 & beyond_dermis==1 ~ "TP",
  Ki67==0 & beyond_dermis==1 ~ "FP",
  Ki67==1 & beyond_dermis==0 ~ "FN",
  Ki67==0 & beyond_dermis==0 ~ "TN",

)
# ,size_cell=case_when(
#   Ki67==1 & size==1 ~ "TP",
#   Ki67==0 & size==1 ~ "FP",
#   Ki67==1 & size==0 ~ "FN",
#   Ki67==0 & size==0 ~ "TN",
#   
# )
)



nuclear_atypia_cellcount<-df_1_cells %>% count(nuclear_atypia_cell) %>% drop_na()


mitotoc_cellcount<-df_1_cells %>% count(mitotoc_cell)%>% drop_na()




pigment_cellcount<-df_1_cells %>% count(pigment_cell)%>% drop_na()


ulceration_cellcount<-df_1_cells %>% count(ulceration_cell)%>% drop_na()


beyond_dermis_cellcount<-df_1_cells %>% count(beyond_dermis_cell)%>% drop_na() 
# %>% bind_rows(data.frame(beyond_dermis_cell="FP",n=0))


# size_cellcount<-Dat_Melanoma_cells %>% count(size_cell)%>% drop_na()


nuclear_atypia_tab <- read.tab.1test(a = 13, b = 3, c = 5, d = 29, 
                          testname = "nuclear_atypia")
acc.1test(nuclear_atypia_tab)

```

## mitotoc and Ki67

```{r}
#| label: mitotoc_accuracy

mitotoc_cellcount<-df_1_cells %>% count(mitotoc_cell)%>% drop_na()


mitotoc_tab <- read.tab.1test(a = 16, b =16 , c = 2, d = 16, 
                          testname = "mitotoc")
acc.1test(mitotoc_tab)

```

Mitotic count has fairly good sensitivity and specificity.


## pigment and Ki67

```{r}
#| label: pigment_accuracy

pigment_cellcount<-df_1_cells %>% count(pigment_cell)%>% drop_na()


pigment_tab <- read.tab.1test(a = 12, b =16 , c = 6, d = 16, 
                          testname = "pigment")
acc.1test(pigment_tab)

```

## ulceration and Ki67

```{r}
#| label: ulceration_accuracy

ulceration_cellcount<-df_1_cells %>% count(ulceration_cell)%>% drop_na()


ulceration_tab <- read.tab.1test(a = 13, b =9 , c = 5, d = 23, 
                          testname = "ulceration")
acc.1test(ulceration_tab)

```

## beyond_dermis and Ki67

beyond dermis as a 1 and confined to dermis as a 0. 

```{r}
#| label: beyond_dermis_accuracy


beyond_dermis_cellcount<-df_1_cells %>% count(beyond_dermis_cell)%>% drop_na()


beyond_dermis_tab <- read.tab.1test(a = 11, b= 24, c = 7, d = 8, 
                          testname = "beyond_dermis")
acc.1test(beyond_dermis_tab)

```
## Size and Ki67

No diagnostic stats because size is not binary.

```{r}
#| label: size_accuracy
#| eval: false
size_cellcount<-df_1_cells %>% count(size_cell)%>% drop_na()


size_tab <- read.tab.1test(a = 2, b= 4, c = 26, d = 87, 
                          testname = "size")
acc.1test(size_tab)

```

# ROC analysis for mitotic count

ROC analysis is conducted for each possible cutoff value. 
 
```{r}
#| label: roc_mitotic_count



#https://cran.r-project.org/web/packages/ROCit/vignettes/my-vignette.html

roc_empirical <- rocit(score = df_1$mitotic_count, class =df_1$Ki67,
                       negref = "0") 

# summary(roc_empirical)


tibble(Cutoff=roc_empirical$Cutoff, 
                 Sensitivity=roc_empirical$TPR, 
                 "1-Specificity"=roc_empirical$FPR,
                 specificity=1-roc_empirical$FPR) %>% gt()

```

The cutoff column show if value > cutoff will considered to be positive. 


```{r}
#| label: fig-roc

plot(roc_empirical, values = F)


```


ROC curves shows the optimal cut off value is 3. And the AUC is `r roc_empirical$AUC`.

