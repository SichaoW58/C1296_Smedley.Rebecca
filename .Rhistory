#| label: load-packages
#| include: false
pacman::p_load(## file folder setup
fs,   # creat folder dir_create()
here, # easy to do cross reference in the project.
## Data step
readr,
readxl, # read_excel()
tidyverse,
janitor,
## IDA
Hmisc,
## Model
meta,
metafor,
# dmetar, #for find.outliers()
lme4,
glmmTMB,
broom,
emmeans,
rpart, # for dx2y()
psych, #
confintr, #for cramersv(), also good bootstrap CI tools.
## result reporting
### graph
ggplot2,
### table
gt,
gtsummary,
knitr,        # for kable()
sjPlot      # tab_model()
)
set.seed(42004063)
#| label: setup-folder
#| include: false
# create the default folder/subfolder
dir_create(here("Data"))  # store raw data, clean data.
dir_create(here("Data/Source"))
dir_create(here("Data/Clean"))
dir_create(here("Documents"))  # all the docs
dir_create(here("Code"))       # r code
dir_create(here("E-mails"))    # correspondence
# Declare location of this script relative to the project root directory.
here::i_am(path = "Code/C1296_Smedley_Association of Ki67 index and prognosis markers.qmd")  #save the qmd under code first and run this line.
#| label: setup-folder
#| include: false
# create the default folder/subfolder
dir_create(here("Data"))  # store raw data, clean data.
dir_create(here("Data/Source"))
dir_create(here("Data/Clean"))
dir_create(here("Documents"))  # all the docs
dir_create(here("Code"))       # r code
dir_create(here("E-mails"))    # correspondence
# Declare location of this script relative to the project root directory.
here::i_am(path = "Code/C1296_Smedley_Association of Ki67 index and prognosis markers.qmd")  #save the qmd under code first and run this line.
#| label: import-data
#| include: false
#I have tried whole morning to import data all show can not open connection. Start a new qmd and copy paste code works
Melanoma_Project_For_STATS_final <- read_csv(here("Data/Raw/Melanoma Project For STATS final.csv"),
col_types = cols(`Case  Number` = col_character(),
`GOLD STANDARD    Ki67: >15%= 1, <15% = 0` = col_factor(levels = c("1",
"0")), `1= haired 2=both 3= conjunctiva - slides we look at in person` = col_factor(levels = c("1",
"2", "3")), `For stats, all locations for all cases, including slides we didn't see in person (1= haired 2=haired/junction 3= conjunctiva 4= unknown` = col_factor(levels = c("1",
"2", "3", "4")), `Female/Male` = col_factor(levels = c("F",
"M")), `Intact/altered` = col_factor(levels = c("I",
"A")), `nuclear atypia: >20%= 1, <20% =0` = col_factor(levels = c("0",
"1")), `mitotic count 3+ = 1, <3=0` = col_factor(levels = c("0",
"1")), `degree of pigmentation (<50%, low, moderate =1), >50%  or high = 0` = col_factor(levels = c("0",
"1")), `ulceration yes=1, no=0` = col_factor(levels = c("0",
"1")), `beyond dermis= 1, not beyond dermis =0` = col_factor(levels = c("0",
"1")), `>0.95 cm = 1, <0.95 cm = 0` = col_factor(levels = c("0",
"1")), `tumor thickness (cm)` = col_number(),
`Mitotic count (in 10 hpf)` = col_number()))
# Declare location of this script relative to the project root directory.
here::i_am(path = "Code/C1296_Smedley_Association of Ki67 index and prognosis markers.qmd")  #save the qmd under code first and run this line.
# Declare location of this script relative to the project root directory.
here::i_am(path = "Code/C1296_Smedley_Association of Ki67.qmd")  #save the qmd under code first and run this line.
# Declare location of this script relative to the project root directory.
here::i_am(path = "Code/C1296_Smedley_Ki67.qmd")  #save the qmd under code first and run this line.
#| label: import-data
#| include: false
#I have tried whole morning to import data all show can not open connection. Start a new qmd and copy paste code works
Melanoma_Project_For_STATS_final <- read_csv(here("Data/Raw/Melanoma Project For STATS final.csv"),
col_types = cols(`Case  Number` = col_character(),
`GOLD STANDARD    Ki67: >15%= 1, <15% = 0` = col_factor(levels = c("1",
"0")), `1= haired 2=both 3= conjunctiva - slides we look at in person` = col_factor(levels = c("1",
"2", "3")), `For stats, all locations for all cases, including slides we didn't see in person (1= haired 2=haired/junction 3= conjunctiva 4= unknown` = col_factor(levels = c("1",
"2", "3", "4")), `Female/Male` = col_factor(levels = c("F",
"M")), `Intact/altered` = col_factor(levels = c("I",
"A")), `nuclear atypia: >20%= 1, <20% =0` = col_factor(levels = c("0",
"1")), `mitotic count 3+ = 1, <3=0` = col_factor(levels = c("0",
"1")), `degree of pigmentation (<50%, low, moderate =1), >50%  or high = 0` = col_factor(levels = c("0",
"1")), `ulceration yes=1, no=0` = col_factor(levels = c("0",
"1")), `beyond dermis= 1, not beyond dermis =0` = col_factor(levels = c("0",
"1")), `>0.95 cm = 1, <0.95 cm = 0` = col_factor(levels = c("0",
"1")), `tumor thickness (cm)` = col_number(),
`Mitotic count (in 10 hpf)` = col_number()))
read_csv(here("Data/Raw/Melanoma Project For STATS final.csv"),
col_types = cols(`Case  Number` = col_character(),
`GOLD STANDARD    Ki67: >15%= 1, <15% = 0` = col_factor(levels = c("1",
"0")), `1= haired 2=both 3= conjunctiva - slides we look at in person` = col_factor(levels = c("1",
"2", "3")), `For stats, all locations for all cases, including slides we didn't see in person (1= haired 2=haired/junction 3= conjunctiva 4= unknown` = col_factor(levels = c("1",
"2", "3", "4")), `Female/Male` = col_factor(levels = c("F",
"M")), `Intact/altered` = col_factor(levels = c("I",
"A")), `nuclear atypia: >20%= 1, <20% =0` = col_factor(levels = c("0",
"1")), `mitotic count 3+ = 1, <3=0` = col_factor(levels = c("0",
"1")), `degree of pigmentation (<50%, low, moderate =1), >50%  or high = 0` = col_factor(levels = c("0",
"1")), `ulceration yes=1, no=0` = col_factor(levels = c("0",
"1")), `beyond dermis= 1, not beyond dermis =0` = col_factor(levels = c("0",
"1")), `>0.95 cm = 1, <0.95 cm = 0` = col_factor(levels = c("0",
"1")), `tumor thickness (cm)` = col_number(),
`Mitotic count (in 10 hpf)` = col_number()))
#| label: load-packages
#| include: false
pacman::p_load(## file folder setup
fs,   # creat folder dir_create()
here, # easy to do cross reference in the project.
## Data step
readr,
readxl, # read_excel()
tidyverse,
janitor,
## IDA
Hmisc,
## Model
meta,
metafor,
# dmetar, #for find.outliers()
lme4,
glmmTMB,
broom,
emmeans,
rpart, # for dx2y()
psych, #
confintr, #for cramersv(), also good bootstrap CI tools.
## result reporting
### graph
ggplot2,
### table
gt,
gtsummary,
knitr,        # for kable()
sjPlot      # tab_model()
)
set.seed(42004063)
#| label: setup-folder
#| include: false
# create the default folder/subfolder
dir_create(here("Data"))  # store raw data, clean data.
dir_create(here("Data/Source"))
dir_create(here("Data/Clean"))
dir_create(here("Documents"))  # all the docs
dir_create(here("Code"))       # r code
dir_create(here("E-mails"))    # correspondence
# Declare location of this script relative to the project root directory.
here::i_am(path = "Code/C1296_Smedley_Ki67.qmd")  #save the qmd under code first and run this line.
# dir_ls()    # briefly check
# dir_tree()  # Show the tree, not necessary, takes time.
# dir_tree("Data")
#| label: import-data
#| include: false
#I have tried whole morning to import data all show can not open connection. Start a new qmd and copy paste code works
Melanoma_Project_For_STATS_final <- read_csv(here("Data/Raw/Melanoma Project For STATS final.csv"),
col_types = cols(`Case  Number` = col_character(),
`GOLD STANDARD    Ki67: >15%= 1, <15% = 0` = col_factor(levels = c("1",
"0")), `1= haired 2=both 3= conjunctiva - slides we look at in person` = col_factor(levels = c("1",
"2", "3")), `For stats, all locations for all cases, including slides we didn't see in person (1= haired 2=haired/junction 3= conjunctiva 4= unknown` = col_factor(levels = c("1",
"2", "3", "4")), `Female/Male` = col_factor(levels = c("F",
"M")), `Intact/altered` = col_factor(levels = c("I",
"A")), `nuclear atypia: >20%= 1, <20% =0` = col_factor(levels = c("0",
"1")), `mitotic count 3+ = 1, <3=0` = col_factor(levels = c("0",
"1")), `degree of pigmentation (<50%, low, moderate =1), >50%  or high = 0` = col_factor(levels = c("0",
"1")), `ulceration yes=1, no=0` = col_factor(levels = c("0",
"1")), `beyond dermis= 1, not beyond dermis =0` = col_factor(levels = c("0",
"1")), `>0.95 cm = 1, <0.95 cm = 0` = col_factor(levels = c("0",
"1")), `tumor thickness (cm)` = col_number(),
`Mitotic count (in 10 hpf)` = col_number()))
Melanoma_Project_For_STATS_final <- read_csv(here("Data/Raw/Melanoma Project For STATS final.csv"),
col_types = cols(`Case  Number` = col_character(),
`GOLD STANDARD    Ki67: >15%= 1, <15% = 0` = col_factor(levels = c("1",
"0")), `1= haired 2=both 3= conjunctiva - slides we look at in person` = col_factor(levels = c("1",
"2", "3")), `For stats, all locations for all cases, including slides we didn't see in person (1= haired 2=haired/junction 3= conjunctiva 4= unknown` = col_factor(levels = c("1",
"2", "3", "4")), `Female/Male` = col_factor(levels = c("F",
"M")), `Intact/altered` = col_factor(levels = c("I",
"A")), `nuclear atypia: >20%= 1, <20% =0` = col_factor(levels = c("0",
"1")), `mitotic count 3+ = 1, <3=0` = col_factor(levels = c("0",
"1")), `degree of pigmentation (<50%, low, moderate =1), >50%  or high = 0` = col_factor(levels = c("0",
"1")), `ulceration yes=1, no=0` = col_factor(levels = c("0",
"1")), `beyond dermis= 1, not beyond dermis =0` = col_factor(levels = c("0",
"1")), `>0.95 cm = 1, <0.95 cm = 0` = col_factor(levels = c("0",
"1")), `tumor thickness (cm)` = col_number(),
`Mitotic count (in 10 hpf)` = col_number()))
Dat_Melanoma_clean <- Melanoma_Project_For_STATS_final %>% clean_names() %>% set_names("case_number","Ki67","location_self","location_report","sex","intact","nuclear_atypia","mitotoc","pigment","ulceration","beyond_dermis","size","tumor_thickness","mitotic_count")
#| label: import-data
#| include: false
#I have tried whole morning to import data all show can not open connection. Start a new qmd and copy paste code works
Melanoma_Project_For_STATS_final <- read_csv(here("Data/Raw/Melanoma Project For STATS final.csv"),
col_types = cols(`Case  Number` = col_character(),
`GOLD STANDARD    Ki67: >15%= 1, <15% = 0` = col_factor(levels = c("1",
"0")), `1= haired 2=both 3= conjunctiva - slides we look at in person` = col_factor(levels = c("1",
"2", "3")), `For stats, all locations for all cases, including slides we didn't see in person (1= haired 2=haired/junction 3= conjunctiva 4= unknown` = col_factor(levels = c("1",
"2", "3", "4")), `Female/Male` = col_factor(levels = c("F",
"M")), `Intact/altered` = col_factor(levels = c("I",
"A")), `nuclear atypia: >20%= 1, <20% =0` = col_factor(levels = c("0",
"1")), `mitotic count 3+ = 1, <3=0` = col_factor(levels = c("0",
"1")), `degree of pigmentation (<50%, low, moderate =1), >50%  or high = 0` = col_factor(levels = c("0",
"1")), `ulceration yes=1, no=0` = col_factor(levels = c("0",
"1")), `beyond dermis= 1, not beyond dermis =0` = col_factor(levels = c("0",
"1")), `>0.95 cm = 1, <0.95 cm = 0` = col_factor(levels = c("0",
"1")), `tumor thickness (cm)` = col_number(),
`Mitotic count (in 10 hpf)` = col_number()))
Melanoma_Project_For_STATS_final <- read_csv(here("Data/Raw/Melanoma Project For STATS final.csv"),
col_types = cols(`Case  Number` = col_character(),
`GOLD STANDARD    Ki67: >15%= 1, <15% = 0` = col_factor(levels = c("1",
"0")), `1= haired 2=both 3= conjunctiva - slides we look at in person` = col_factor(levels = c("1",
"2", "3")), `For stats, all locations for all cases, including slides we didn't see in person (1= haired 2=haired/junction 3= conjunctiva 4= unknown` = col_factor(levels = c("1",
"2", "3", "4")), `Female/Male` = col_factor(levels = c("F",
"M")), `Intact/altered` = col_factor(levels = c("I",
"A")), `nuclear atypia: >20%= 1, <20% =0` = col_factor(levels = c("0",
"1")), `mitotic count 3+ = 1, <3=0` = col_factor(levels = c("0",
"1")), `degree of pigmentation (<50%, low, moderate =1), >50%  or high = 0` = col_factor(levels = c("0",
"1")), `ulceration yes=1, no=0` = col_factor(levels = c("0",
"1")), `beyond dermis= 1, not beyond dermis =0` = col_factor(levels = c("0",
"1")), `>0.95 cm = 1, <0.95 cm = 0` = col_factor(levels = c("0",
"1")), `tumor thickness (cm)` = col_number(),
`Mitotic count (in 10 hpf)` = col_number()))
Dat_Melanoma_clean <- Melanoma_Project_For_STATS_final %>% clean_names() %>% set_names("case_number","Ki67","location_self","location_report","sex","intact","nuclear_atypia","mitotoc","pigment","ulceration","beyond_dermis","size","tumor_thickness","mitotic_count")
#|label: IDA-describe
#gotta use namespace Hmisc otherwise out of script
d_Melanoma <- Hmisc::describe(Dat_Melanoma_clean)
Hmisc::html(d_Melanoma, size=90, scroll=TRUE)
#| label: tbl-descriptive-stats
#| tbl-cap: Descriptive-stats by Ki67 status
Dat_Melanoma_clean %>%
select(-case_number) %>%
tbl_summary(
by = "Ki67",
type = all_continuous() ~ "continuous2",
statistic = list(
all_continuous() ~ c("{mean} ({sd})",
"{median} ({p25}, {p75})"),
all_categorical() ~ "{n} / {N} ({p}%)"
),
digits = all_continuous() ~ 2,
missing_text = "(Missing)"
) %>%
add_p(pvalue_fun = ~ style_pvalue(.x, digits = 2)) %>%
add_n() %>%
modify_header(label ~ "**Prognositic marker**") %>%
modify_spanning_header(c("stat_1", "stat_2") ~ "**Gold standard Ki67 status**")
#| label: infer-nuclear_atypia
# Will use univariate logit to get odd ratio and ci
logit_nuclear_atypia <- glm(Ki67 ~ nuclear_atypia, data = Dat_Melanoma_clean %>% mutate(Ki67=factor(Ki67,levels=c(0,1))), family = "binomial")
logit_nuclear_atypia %>% tab_model()
#| label: infer-micotic
# Will use univariate logit to get odd ratio and ci
logit_mitotoc <- glm(Ki67 ~ mitotoc, data = Dat_Melanoma_clean %>% mutate(Ki67=factor(Ki67,levels=c(0,1))), family = "binomial")
logit_mitotoc %>% tab_model()
Dat_Melanoma_clean %>% mutate(Ki67=factor(Ki67,levels=c(0,1)))
logit_tumor_thick <- glm(Ki67 ~ tumor_thickness, data = Dat_Melanoma_clean %>% mutate(Ki67=factor(Ki67,levels=c(0,1))), family = "binomial")
logit_tumor_thick %>% tab_model()
logit_tumor_thick <- glm(Ki67 ~ tumor_thickness*10, data = Dat_Melanoma_clean %>% mutate(Ki67=factor(Ki67,levels=c(0,1))), family = "binomial")
logit_tumor_thick <- glm(Ki67 ~ tumor_thickness, data = Dat_Melanoma_clean %>% mutate(Ki67=factor(Ki67,levels=c(0,1))), family = "binomial")
logit_tumor_thick <- glm(Ki67 ~ tumor_thickness, data = Dat_Melanoma_clean %>% mutate(Ki67=factor(Ki67,levels=c(0,1)),tumor_mm=*100*tumor_thickness), family = "binomial")
logit_tumor_thick <- glm(Ki67 ~ tumor_thickness, data = Dat_Melanoma_clean %>% mutate(Ki67=factor(Ki67,levels=c(0,1)),tumor_mm=100*tumor_thickness), family = "binomial")
logit_tumor_mm <- glm(Ki67 ~ tumor_mm, data = Dat_Melanoma_clean %>% mutate(Ki67=factor(Ki67,levels=c(0,1)),tumor_mm=100*tumor_thickness), family = "binomial")
logit_tumor_mm %>% tab_model()
logit_tumor_thick %>% tab_model()
Dat_Melanoma_clean %>% mutate(Ki67=factor(Ki67,levels=c(0,1)),tumor_mm=100*tumor_thickness)
logit_beyond_dermis <- glm(Ki67 ~ beyond_dermis, data = Dat_Melanoma_clean %>% mutate(Ki67=factor(Ki67,levels=c(0,1)),tumor_mm=100*tumor_thickness), family = "binomial")
logit_beyond_dermis %>% tab_model()
logit_beyond_dermis <- glm(Ki67 ~ beyond_dermis, data = Dat_Melanoma_clean %>% mutate(Ki67=factor(Ki67,levels=c(0,1)),tumor_mm=100*tumor_thickness), family = "binomial")
logit_beyond_dermis
View(Dat_Melanoma_clean)
glm(Ki67 ~ beyond_dermis, data = Dat_Melanoma_clean %>% mutate(Ki67=factor(Ki67,levels=c(0,1)),tumor_mm=100*tumor_thickness), family = "binomial")
#| label: load-packages
#| include: false
pacman::p_load(## file folder setup
fs,   # creat folder dir_create()
here, # easy to do cross reference in the project.
## Data step
readr,
readxl, # read_excel()
tidyverse,
janitor,
## IDA
Hmisc,
## Model
meta,
metafor,
# dmetar, #for find.outliers()
lme4,
glmmTMB,
broom,
emmeans,
rpart, # for dx2y()
psych, #
confintr, #for cramersv(), also good bootstrap CI tools.
DTComPair, # for sensitivity, specificity, PPV and NPV for diagnostics tests.
## result reporting
### graph
ggplot2,
### table
gt,
gtsummary,
knitr,        # for kable()
sjPlot      # tab_model()
)
set.seed(42004063)
Dat_Melanoma_clean
Dat_Melanoma_clean %>% mutate(nuclear_atypia_cell=case_when(
Ki67==1 & nuclear_atypia==1 ~ "TP",
Ki67==0 & nuclear_atypia==1 ~ "FP",
Ki67==1 & nuclear_atypia==0 ~ "FN",
Ki67==0 & nuclear_atypia==0 ~ "TN",
))
Dat_Melanoma_clean %>% mutate(nuclear_atypia_cell=case_when(
Ki67==1 & nuclear_atypia==1 ~ "TP",
Ki67==0 & nuclear_atypia==1 ~ "FP",
Ki67==1 & nuclear_atypia==0 ~ "FN",
Ki67==0 & nuclear_atypia==0 ~ "TN",
), mitotoc_cell=case_when(
Ki67==1 & mitotoc==1 ~ "TP",
Ki67==0 & mitotoc==1 ~ "FP",
Ki67==1 & mitotoc==0 ~ "FN",
Ki67==0 & mitotoc==0 ~ "TN",
),pigment_cell=case_when(
Ki67==1 & pigment==1 ~ "TP",
Ki67==0 & pigment==1 ~ "FP",
Ki67==1 & pigment==0 ~ "FN",
Ki67==0 & pigment==0 ~ "TN",
),ulceration_cell=case_when(
Ki67==1 & ulceration==1 ~ "TP",
Ki67==0 & ulceration==1 ~ "FP",
Ki67==1 & ulceration==0 ~ "FN",
Ki67==0 & ulceration==0 ~ "TN",
))
Dat_Melanoma_clean %>% mutate(nuclear_atypia_cell=case_when(
Ki67==1 & nuclear_atypia==1 ~ "TP",
Ki67==0 & nuclear_atypia==1 ~ "FP",
Ki67==1 & nuclear_atypia==0 ~ "FN",
Ki67==0 & nuclear_atypia==0 ~ "TN",
), mitotoc_cell=case_when(
Ki67==1 & mitotoc==1 ~ "TP",
Ki67==0 & mitotoc==1 ~ "FP",
Ki67==1 & mitotoc==0 ~ "FN",
Ki67==0 & mitotoc==0 ~ "TN",
),pigment_cell=case_when(
Ki67==1 & pigment==1 ~ "TP",
Ki67==0 & pigment==1 ~ "FP",
Ki67==1 & pigment==0 ~ "FN",
Ki67==0 & pigment==0 ~ "TN",
),ulceration_cell=case_when(
Ki67==1 & ulceration==1 ~ "TP",
Ki67==0 & ulceration==1 ~ "FP",
Ki67==1 & ulceration==0 ~ "FN",
Ki67==0 & ulceration==0 ~ "TN",
),beyond_dermis_cell=case_when(
Ki67==1 & beyond_dermis==1 ~ "TP",
Ki67==0 & beyond_dermis==1 ~ "FP",
Ki67==1 & beyond_dermis==0 ~ "FN",
Ki67==0 & beyond_dermis==0 ~ "TN",
),size_cell=case_when(
Ki67==1 & size==1 ~ "TP",
Ki67==0 & size==1 ~ "FP",
Ki67==1 & size==0 ~ "FN",
Ki67==0 & size==0 ~ "TN",
))
Dat_Melanoma_cells<-Dat_Melanoma_clean %>% mutate(nuclear_atypia_cell=case_when(
Ki67==1 & nuclear_atypia==1 ~ "TP",
Ki67==0 & nuclear_atypia==1 ~ "FP",
Ki67==1 & nuclear_atypia==0 ~ "FN",
Ki67==0 & nuclear_atypia==0 ~ "TN",
), mitotoc_cell=case_when(
Ki67==1 & mitotoc==1 ~ "TP",
Ki67==0 & mitotoc==1 ~ "FP",
Ki67==1 & mitotoc==0 ~ "FN",
Ki67==0 & mitotoc==0 ~ "TN",
),pigment_cell=case_when(
Ki67==1 & pigment==1 ~ "TP",
Ki67==0 & pigment==1 ~ "FP",
Ki67==1 & pigment==0 ~ "FN",
Ki67==0 & pigment==0 ~ "TN",
),ulceration_cell=case_when(
Ki67==1 & ulceration==1 ~ "TP",
Ki67==0 & ulceration==1 ~ "FP",
Ki67==1 & ulceration==0 ~ "FN",
Ki67==0 & ulceration==0 ~ "TN",
),beyond_dermis_cell=case_when(
Ki67==1 & beyond_dermis==1 ~ "TP",
Ki67==0 & beyond_dermis==1 ~ "FP",
Ki67==1 & beyond_dermis==0 ~ "FN",
Ki67==0 & beyond_dermis==0 ~ "TN",
),size_cell=case_when(
Ki67==1 & size==1 ~ "TP",
Ki67==0 & size==1 ~ "FP",
Ki67==1 & size==0 ~ "FN",
Ki67==0 & size==0 ~ "TN",
))
Dat_Melanoma_cells
Dat_Melanoma_cells %>% count(
nuclear_atypia_cell)
Dat_Melanoma_cells
Dat_Melanoma_cells %>% count(nuclear_atypia_cell,mitotoc_cell,pigment_cell,ulceration_cell,beyond_dermis_cell,size_cell)
Dat_Melanoma_cells %>% count(nuclear_atypia_cell,mitotoc_cell,pigment_cell,ulceration_cell,beyond_dermis_cell,size_cell)
Dat_Melanoma_cells %>% count(mitotoc_cell)
nuclear_atypia_cellcount<-Dat_Melanoma_cells %>% count(nuclear_atypia_cell,mitotoc_cell,pigment_cell,ulceration_cell,beyond_dermis_cell,size_cell)
nuclear_atypia_cellcount<-Dat_Melanoma_cells %>% count(nuclear_atypia_cell)
nuclear_atypia_cellcount<-Dat_Melanoma_cells %>% count(nuclear_atypia_cell)
mitotoc_cellcount<-Dat_Melanoma_cells %>% count(mitotoc_cell)
nuclear_atypia_cellcount<-Dat_Melanoma_cells %>% count(nuclear_atypia_cell)
mitotoc_cellcount<-Dat_Melanoma_cells %>% count(mitotoc_cell)
pigment_cellcount<-Dat_Melanoma_cells %>% count(pigment_cell)
ulceration_cellcount<-Dat_Melanoma_cells %>% count(ulceration_cell)
beyond_dermis_cellcount<-Dat_Melanoma_cells %>% count(beyond_dermis_cell)
size_cellcount<-Dat_Melanoma_cells %>% count(size_cell)
nuclear_atypia_cellcount
mitotoc_cellcount
nuclear_atypia_cellcount<-Dat_Melanoma_cells %>% count(nuclear_atypia_cell) %>% drop_na()
nuclear_atypia_cellcount
mitotoc_cellcount
pigment_cellcount
mitotoc_cellcount<-Dat_Melanoma_cells %>% count(mitotoc_cell)%>% drop_na()
pigment_cellcount<-Dat_Melanoma_cells %>% count(pigment_cell)%>% drop_na()
beyond_dermis_cellcount<-Dat_Melanoma_cells %>% count(beyond_dermis_cell)
ulceration_cellcount<-Dat_Melanoma_cells %>% count(ulceration_cell)%>% drop_na()
ulceration_cellcount
beyond_dermis_cellcount<-Dat_Melanoma_cells %>% count(beyond_dermis_cell)%>% drop_na()
beyond_dermis_cellcount
beyond_dermis_cellcount<-Dat_Melanoma_cells %>% count(beyond_dermis_cell)%>% drop_na() %>% bind_rows(data.frame(beyond_dermis_cell="FP",n=0))
beyond_dermis_cellcount
size_cellcount<-Dat_Melanoma_cells %>% count(size_cell)%>% drop_na()
size_cellcount
nuclear_atypia_cellcount
nuclear_atypia_tab <- read.tab.1test(a = 17, b = 10, c = 81, d = 11,
testname = "nuclear_atypia")
acc.1test(nuclear_atypia_tab)
mitotoc_cellcount
mitotoc_tab <- read.tab.1test(a = 26, b =18 , c = 74, d = 2,
testname = "nuclear_atypia")
mitotoc_tab <- read.tab.1test(a = 26, b =18 , c = 74, d = 2,
testname = "mitotoc")
acc.1test(mitotoc_tab)
nuclear_atypia_cellcount
nuclear_atypia_tab <- read.tab.1test(a = 11, b = 10, c = 81, d = 17,
testname = "nuclear_atypia")
acc.1test(nuclear_atypia_tab)
acc.1test(nuclear_atypia_tab) %>% tidy()
acc.1test(nuclear_atypia_tab) %>% gt()
acc.1test(nuclear_atypia_tab) %>% data.frame()
A <- acc.1test(nuclear_atypia_tab)
A$sensitivity
A$tab
acc.1test(nuclear_atypia_tab) %>% as.data.frame()
pigment_cellcount
